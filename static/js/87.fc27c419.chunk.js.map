{"version":3,"file":"static/js/87.fc27c419.chunk.js","mappings":"sQACaA,EAAW,SAAC,GAAc,IAC7BC,EAD4B,EAAXC,KACFC,KAAI,YAAmD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAEpD,OAAQA,IAAgB,2BACpB,gBAAKC,IAAG,yCAAoCD,GAAgBE,IAAI,UAChE,uBAAIL,KACJ,uBAAIE,MAHyBD,EAIpC,IACD,OAAQ,wBAAMJ,GACjB,ECyBD,EA7Ba,WACT,OAA0BS,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAMC,EAAAA,EAAAA,MAAND,GAiBR,OAhBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAa,mCAAG,oGAEdN,GAAW,GACXE,EAAS,MAHK,UAIKK,EAAAA,EAAAA,IAAaJ,GAJlB,OAIRK,EAJQ,OAKdV,EAASU,GALK,gDAOdN,EAAS,EAAD,IAPM,yBASdF,GAAW,GATG,4EAAH,qDAYnBM,GACH,GAAE,CAACH,KAGA,2BACKJ,IAAW,SAACU,EAAA,EAAD,IACXR,IAAS,gDACTJ,IAAS,SAACX,EAAD,CAAUE,KAAOS,EAAMa,SAG5C,C,8MC/BKC,EAAM,+BAENC,EAAQ,UAIRC,EAAM,mCAICC,EAAe,mCAAG,+FACrBC,EAAWC,EAAAA,EAAAA,OAAa,CAC9BC,QAAQ,GAAD,OAAKN,GAAL,OAXS,qBAahBO,OAAQ,CACJC,QAASN,KALc,SAQJE,EAASK,MARL,uBAQnBZ,EARmB,EAQnBA,KARmB,kBASpBA,GAToB,2CAAH,qDAYfa,EAAY,mCAAG,WAAOlB,GAAP,kFAClBY,EAAWC,EAAAA,EAAAA,OAAa,CAC9BC,QAAQ,GAAD,OAAKN,GAAL,OAAWC,GAAX,OAAmBT,GAE1Be,OAAQ,CACJC,QAASN,KALW,SAQDE,EAASK,MARR,uBAQhBZ,EARgB,EAQhBA,KARgB,kBASjBA,GATiB,2CAAH,sDAYZD,EAAY,mCAAG,WAAOJ,GAAP,kFAClBY,EAAWC,EAAAA,EAAAA,OAAa,CAC1BC,QAAQ,GAAD,OAAKN,GAAL,OAAWC,GAAX,OAAmBT,GAAnB,OAjCC,YAkCRe,OAAQ,CACJC,QAASN,KAJO,SAODE,EAASK,MAPR,uBAOhBZ,EAPgB,EAOhBA,KAPgB,kBAQjBA,GARiB,2CAAH,sDAWZc,EAAe,mCAAG,WAAOnB,GAAP,gFACrBY,EAAWC,EAAAA,EAAAA,OAAa,CAC1BC,QAAQ,GAAD,OAAKN,GAAL,OAAWC,GAAX,OAAmBT,GAAnB,OA3CI,YA4CXe,OAAQ,CACJC,QAASN,KAGVL,EAAOO,EAASK,MAPI,kBAQpBZ,GARoB,2CAAH,sDAUfe,EAAc,mCAAG,WAAOC,GAAP,gFACpBT,EAAWC,EAAAA,EAAAA,OAAa,CAC1BC,QAAQ,GAAD,OAAKN,GAAL,OApDG,iBAqDVO,OAAQ,CACJC,QAASN,EACTY,MAAOD,KAGThB,EAAOO,EAASK,MARI,kBAUnBZ,GAVmB,2CAAH,sDAa3Ba,EAAaK,UAAY,CACrBvB,GAAIuB,IAAAA,OAAAA,WACJF,YAAaE,IAAAA,O,sDCxEjB,MAA2B,yBAA3B,EAA6D,uB,SCA9C,SAASjB,IACtB,OACE,gBAAKkB,UAAWC,EAAhB,UACI,gBAAKD,UAAWC,KAGvB,C","sources":["components/CastList/CastList.jsx","Pages/Cast/Cast.jsx","components/GetFilms/GetFilms.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx"],"sourcesContent":["import propTypes from 'prop-types'\nexport const CastList = ({ item }) => {\n    const element = item.map(({ name, credit_id, character, profile_path }) => {\n    \n        return (profile_path && <li key={credit_id}>\n            <img src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt=\"name\" />\n            <p>{name}</p>\n            <p>{character}</p></li>)\n    })\n    return (<ul>{ element}</ul>)\n}\nCastList.propTypes = {\n    item: propTypes.array.isRequired\n}","import { GetMovieCast } from \"components/GetFilms/GetFilms\";\nimport { useState, useEffect } from \"react\";\nimport Loader from \"components/Loader/Loader\";\nimport { useParams } from \"react-router-dom\";\nimport { CastList } from \"components/CastList/CastList\";\n\nconst Cast = () => {\n    const [state, setState] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const { id} = useParams();\n    useEffect(() => {\n        const fetchCastById = async () => {\n            try {\n                setLoading(true);\n                setError(null);\n                const data = await GetMovieCast(id);\n                setState(data);\n            } catch (e) {\n                setError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n        fetchCastById();\n    }, [id]);\n    \n    return (\n        <div>\n            {loading && <Loader />}\n            {error && <p>Something went wrong</p>}\n            {state && <CastList item={ state.cast} />}\n        </div>\n    )\n}\nexport default Cast;","import axios from \"axios\";\nimport propTypes from 'prop-types'\n\nconst URL = \"https://api.themoviedb.org/3\";\nconst urlTrending = \"/trending/all/day\";\nconst urlId = \"/movie/\";\nconst urlCast = \"/credits\";\nconst urlReviews = \"/reviews\";\nconst urlSearch = \"/search/movie\";\nconst KEY = \"1026e0f194f2bc4cc4b6e148bd5c040a\";\n\n\n\nexport const GetPopularMovie = async () => {\n    const instance = axios.create({\n    baseURL: `${URL}${urlTrending}`,\n\n    params: {\n        api_key: KEY,\n    }\n})\n    const { data } = await instance.get();\n    return data;\n}\n\nexport const GetMovieById = async (id) => {\n    const instance = axios.create({\n    baseURL: `${URL}${urlId}${id}`,\n\n    params: {\n        api_key: KEY,\n    }\n})\n    const { data } = await instance.get();\n    return data;\n}\n\nexport const GetMovieCast = async (id) => {\n    const instance = axios.create({\n        baseURL: `${URL}${urlId}${id}${urlCast}`,\n        params: {\n            api_key: KEY,\n        }\n    })\n    const { data } = await instance.get();\n    return data;\n}\n\nexport const GetMovieReviews = async (id) => {\n    const instance = axios.create({\n        baseURL: `${URL}${urlId}${id}${urlReviews}`,\n        params: {\n            api_key: KEY,\n        }\n    })\n    const  data = instance.get();\n    return data;\n}\nexport const GetMovieSearch = async (searchQuery) => {\n    const instance = axios.create({\n        baseURL: `${URL}${urlSearch}`,\n        params: {\n            api_key: KEY,\n            query: searchQuery\n        }\n    })\n    const data = instance.get();\n    \n    return data;\n    \n}\nGetMovieById.propTypes = {\n    id: propTypes.number.isRequired,\n    searchQuery: propTypes.string\n}","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Loader_backdrop__gjec2\",\"loader\":\"Loader_loader__+lRPl\"};","import styles from \"./Loader.module.css\";\nexport default function Loader() {\n  return (\n    <div className={styles.backdrop}>\n        <div className={styles.loader}></div>\n    </div>\n  )\n}"],"names":["CastList","element","item","map","name","credit_id","character","profile_path","src","alt","useState","state","setState","loading","setLoading","error","setError","id","useParams","useEffect","fetchCastById","GetMovieCast","data","Loader","cast","URL","urlId","KEY","GetPopularMovie","instance","axios","baseURL","params","api_key","get","GetMovieById","GetMovieReviews","GetMovieSearch","searchQuery","query","propTypes","className","styles"],"sourceRoot":""}