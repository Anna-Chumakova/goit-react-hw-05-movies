{"version":3,"file":"static/js/430.46e2c230.chunk.js","mappings":"wQACaA,EAAc,SAAC,GAAc,IAEtC,EAFqC,EAAXC,KAEYC,KAA9BC,EAAR,EAAQA,QACR,GAAoB,IADpB,EAAiBC,YAEb,OAAO,oEAEP,IAAMC,EAAUF,EAAQG,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACvC,OAAS,2BACL,oCAAYD,MACZ,uBAAIC,MAFUA,EAIjB,IACL,OAAQ,wBAAKH,GAEhB,ECsBD,EA/BgB,WACZ,OAA0BI,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAgB,mCAAG,oGAEjBN,GAAW,GACXE,EAAS,MAHQ,UAIEK,EAAAA,EAAAA,IAAgBJ,GAJlB,OAIXd,EAJW,OAKjBS,EAAST,GALQ,gDAQjBa,EAAS,EAAD,IARS,yBAUjBF,GAAW,GAVM,4EAAH,qDAatBM,GACH,GAAE,CAACH,KAGA,2BACKJ,IAAW,SAACS,EAAA,EAAD,IACXP,IAAS,oEACTJ,IAAS,SAACV,EAAD,CAAaC,KAAMS,MAGxC,C,8MCjCKY,EAAM,+BAENC,EAAQ,UAIRC,EAAM,mCAICC,EAAe,mCAAG,+FACrBC,EAAWC,EAAAA,EAAAA,OAAa,CAC9BC,QAAQ,GAAD,OAAKN,GAAL,OAXS,qBAahBO,OAAQ,CACJC,QAASN,KALc,SAQJE,EAASK,MARL,uBAQnB7B,EARmB,EAQnBA,KARmB,kBASpBA,GAToB,2CAAH,qDAYf8B,EAAY,mCAAG,WAAOhB,GAAP,kFAClBU,EAAWC,EAAAA,EAAAA,OAAa,CAC9BC,QAAQ,GAAD,OAAKN,GAAL,OAAWC,GAAX,OAAmBP,GAE1Ba,OAAQ,CACJC,QAASN,KALW,SAQDE,EAASK,MARR,uBAQhB7B,EARgB,EAQhBA,KARgB,kBASjBA,GATiB,2CAAH,sDAYZ+B,EAAY,mCAAG,WAAOjB,GAAP,kFAClBU,EAAWC,EAAAA,EAAAA,OAAa,CAC1BC,QAAQ,GAAD,OAAKN,GAAL,OAAWC,GAAX,OAAmBP,GAAnB,OAjCC,YAkCRa,OAAQ,CACJC,QAASN,KAJO,SAODE,EAASK,MAPR,uBAOhB7B,EAPgB,EAOhBA,KAPgB,kBAQjBA,GARiB,2CAAH,sDAWZkB,EAAe,mCAAG,WAAOJ,GAAP,gFACrBU,EAAWC,EAAAA,EAAAA,OAAa,CAC1BC,QAAQ,GAAD,OAAKN,GAAL,OAAWC,GAAX,OAAmBP,GAAnB,OA3CI,YA4CXa,OAAQ,CACJC,QAASN,KAGVtB,EAAOwB,EAASK,MAPI,kBAQpB7B,GARoB,2CAAH,sDAUfgC,EAAc,mCAAG,WAAOC,GAAP,gFACpBT,EAAWC,EAAAA,EAAAA,OAAa,CAC1BC,QAAQ,GAAD,OAAKN,GAAL,OApDG,iBAqDVO,OAAQ,CACJC,QAASN,EACTY,MAAOD,KAGTjC,EAAOwB,EAASK,MARI,kBAUnB7B,GAVmB,2CAAH,sDAa3B8B,EAAaK,UAAY,CACrBrB,GAAIqB,IAAAA,OAAAA,WACJF,YAAaE,IAAAA,O,sDCxEjB,MAA2B,yBAA3B,EAA6D,uB,SCA9C,SAAShB,IACtB,OACE,gBAAKiB,UAAWC,EAAhB,UACI,gBAAKD,UAAWC,KAGvB,C","sources":["components/ReviewsList/ReviewsList.jsx","Pages/Reviews/Reviews.jsx","components/GetFilms/GetFilms.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx"],"sourcesContent":["import propTypes from 'prop-types'\nexport const ReviewsList = ({ item }) => {\n    \n    const { results, total_pages } = item.data;\n    if (total_pages === 0) {\n        return(<p>We don't have any reveiws for this movie</p>);\n    } else {\n        const element = results.map(({ author, content }) => {\n        return ( <li key={content}>\n            <p>Author: {author}</p>\n            <p>{content}</p>\n        </li>)\n        })\n    return (<ul>{element}</ul>); \n    }          \n}\nReviewsList.propTypes = {\n    item: propTypes.object.isRequired\n}","import { useState, useEffect } from \"react\";\nimport Loader from \"components/Loader/Loader\";\nimport { useParams } from \"react-router-dom\";\nimport { GetMovieReviews } from \"components/GetFilms/GetFilms\";\nimport { ReviewsList } from \"components/ReviewsList/ReviewsList\";\n\nconst Reviews = () => {\n    const [state, setState] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const { id } = useParams();\n    \n    useEffect(() => {\n        const fetchReviewsById = async () => {\n            try {\n                setLoading(true);\n                setError(null);\n                const data = await GetMovieReviews(id);\n                setState(data);\n                \n            } catch (e) {\n                setError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n        fetchReviewsById();\n    }, [id]);\n    \n    return (\n        <div>\n            {loading && <Loader />}\n            {error && <p>We don't have any reveiws for this movie</p>}\n            {state && <ReviewsList item={state} />}\n        </div>\n    )\n}\nexport default Reviews;","import axios from \"axios\";\nimport propTypes from 'prop-types'\n\nconst URL = \"https://api.themoviedb.org/3\";\nconst urlTrending = \"/trending/all/day\";\nconst urlId = \"/movie/\";\nconst urlCast = \"/credits\";\nconst urlReviews = \"/reviews\";\nconst urlSearch = \"/search/movie\";\nconst KEY = \"1026e0f194f2bc4cc4b6e148bd5c040a\";\n\n\n\nexport const GetPopularMovie = async () => {\n    const instance = axios.create({\n    baseURL: `${URL}${urlTrending}`,\n\n    params: {\n        api_key: KEY,\n    }\n})\n    const { data } = await instance.get();\n    return data;\n}\n\nexport const GetMovieById = async (id) => {\n    const instance = axios.create({\n    baseURL: `${URL}${urlId}${id}`,\n\n    params: {\n        api_key: KEY,\n    }\n})\n    const { data } = await instance.get();\n    return data;\n}\n\nexport const GetMovieCast = async (id) => {\n    const instance = axios.create({\n        baseURL: `${URL}${urlId}${id}${urlCast}`,\n        params: {\n            api_key: KEY,\n        }\n    })\n    const { data } = await instance.get();\n    return data;\n}\n\nexport const GetMovieReviews = async (id) => {\n    const instance = axios.create({\n        baseURL: `${URL}${urlId}${id}${urlReviews}`,\n        params: {\n            api_key: KEY,\n        }\n    })\n    const  data = instance.get();\n    return data;\n}\nexport const GetMovieSearch = async (searchQuery) => {\n    const instance = axios.create({\n        baseURL: `${URL}${urlSearch}`,\n        params: {\n            api_key: KEY,\n            query: searchQuery\n        }\n    })\n    const data = instance.get();\n    \n    return data;\n    \n}\nGetMovieById.propTypes = {\n    id: propTypes.number.isRequired,\n    searchQuery: propTypes.string\n}","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Loader_backdrop__gjec2\",\"loader\":\"Loader_loader__+lRPl\"};","import styles from \"./Loader.module.css\";\nexport default function Loader() {\n  return (\n    <div className={styles.backdrop}>\n        <div className={styles.loader}></div>\n    </div>\n  )\n}"],"names":["ReviewsList","item","data","results","total_pages","element","map","author","content","useState","state","setState","loading","setLoading","error","setError","id","useParams","useEffect","fetchReviewsById","GetMovieReviews","Loader","URL","urlId","KEY","GetPopularMovie","instance","axios","baseURL","params","api_key","get","GetMovieById","GetMovieCast","GetMovieSearch","searchQuery","query","propTypes","className","styles"],"sourceRoot":""}